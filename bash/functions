#Fast change to a sub-folder of dotfiles. Alias this to 'df' or your preference
df(){
    cd ${HOME}/dotfiles/$1
}
_cddf() {
    local cur opts
    cur="${COMP_WORDS[COMP_CWORD]}"
    opts=$(cd ~/dotfiles; ls -d * | sed 's|/./||')
    COMPREPLY=($(compgen -W "${opts}" -- ${cur}))
}
complete -F _cddf df


# DOCKER

# Get a container's id by name match
docker_id(){
    if [[ "$1" == "" ]]; then
	    echo "you need to specify a string to match the container name against"
	    echo "Usage: docker_id <match>"
	    echo "--------------------------------"
	    echo "available containers:"
	    docker ps
    else
	    docker ps | grep "$1" | sed 's/|/ /' | awk '{print $1}'
    fi
}


#Enter a docker container
docker_enter_id(){
    if [[ "$1" == "" ]]; then
	echo "you need to specify a container id"
	echo "Usage: docker_enter_id <container_id>"
	echo "--------------------------------"
	echo "available containers:"
	docker ps
    else
        docker exec -it $1 bash
    fi
}

#Enter a docker container by name match
docker_enter(){
    if [[ "$1" == "" ]]; then
	    echo "you need to specify a string to match the container name against"
	    echo "Usage: docker_enter <match>"
	    echo "--------------------------------"
	    echo "available containers:"
	    docker ps
    else
	    DOCKERID=$(docker ps | grep "$1" | sed 's/|/ /' | awk '{print $1}' 2>&1)
      docker exec -it $DOCKERID bash
    fi
}

#Enter a docker container by name match
docker_enter(){
    if [[ "$1" == "" ]]; then
	    echo "you need to specify a string to match the container name against"
	    echo "Usage: docker_enter <match>"
	    echo "--------------------------------"
	    echo "available containers:"
	    docker ps
    else
	    DOCKERID=$(docker ps | grep "$1" | sed 's/|/ /' | awk '{print $1}' 2>&1)
      docker exec -it $DOCKERID bash
    fi
}

# Delete docker container by name
docker_rm(){
  if [[ "$1" == "" ]]; then
    echo "you need to specify a string to match the container name against"
    echo "Usage: docker_rm <match>"
    echo "--------------------------------"
    echo "available containers:"
    docker ps
  else
    DOCKERID=$(docker ps | grep "$1" | sed 's/|/ /' | awk '{print $1}' 2>&1)
    docker rm -f $DOCKERID
  fi
}

# delete a docker image by ID
docker_rm_image(){
  docker rmi $1
}

# Add tab completion for container names to docker commands
complete -o "default" -o "nospace" -W "$(docker ps --format \"{{.Names}}\")" docker docker_enter docker_enter_id docker_id docker_rm;
complete -o "default" -o "nospace" -W "$(docker images --format \"{{.ID}}\")" docker_rm_image;


#Json Lint
json_lint(){
  echo "$1" | python -mjson.tool
}
